{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["export const searchParams  =  {\n    key: \"11070675-9db3ad99120a3eae94c3d42ec\",\n    q: \"\",\n    image_type: \"photo\",\n    orientation: \"horizontal\",\n    safesearch: \"true\",\n    pretty: \"true\",\n}\n\nexport function fetchPhoto(params) {\n  const spinner = document.querySelector('.loader')\n  spinner.style.display = \"block\";\n  if (params.q === \"\") {\n        spinner.style.display = \"none\";\n        return\n    }\n  return fetch(\n    `https://pixabay.com/api/?${new URLSearchParams(params)}`\n  ).then((response) => {\n    spinner.style.display = \"none\";\n    if (!response.ok) {\n      throw new Error(response.status);\n      }\n    return response.json();\n  });\n}","export function rendrePhoto(photos, list) {\n    const markup = photos.hits\n    .map((photo) => {\n      return `<li class=\"gallery-item\">\n                            <a class=\"gallery-link\" href=${photo.largeImageURL}>\n                                <img\n                                class=\"gallery-image\"\n                                src=\"${photo.webformatURL}\"\n                                alt=\"${photo.tags}\"\n                                />\n                            </a>\n                            <div class=\"desrp\">\n                                <ul class=\"desrp-list\">\n                                    <li class=\"desrp-item\">\n                                        <p class=\"desrp-actions\">Likes</p>\n                                        <p class=\"desrp-actions-total\">${photo.likes}</p>\n                                    </li>\n                                    <li class=\"desrp-item\">\n                                        <p class=\"desrp-actions\">Views</p>\n                                        <p class=\"desrp-actions-total\">${photo.views}</p>\n                                    </li>\n                                    <li class=\"desrp-item\">\n                                        <p class=\"desrp-actions\">Comments</p>\n                                        <p class=\"desrp-actions-total\">${photo.comments}</p>\n                                    </li>\n                                    <li class=\"desrp-item\">\n                                        <p class=\"desrp-actions\">Downloads</p>\n                                        <p class=\"desrp-actions-total\">${photo.downloads}</p>\n                                    </li>\n                                </ul>\n                            </div>\n                        </li>` ;\n    })\n    .join(\"\");\n    list.insertAdjacentHTML(\"beforeend\", markup);\n}","import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nimport * as pixabay from \"./js/pixabay-api.js\"\nimport * as render from \"./js/render-functions.js\"\n\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nconst input = document.querySelector('input[name=\"search\"]')\nconst photosList = document.querySelector(\".gallery\");\nconst form = document.querySelector('.form')\n\ninput.addEventListener('input', inputValueFunc);\n\nfunction inputValueFunc(event) {\n    pixabay.searchParams.q = event.target.value;\n}\n\nform.addEventListener(\"submit\", formSubmit);\n\nfunction formSubmit(event) {\n    event.preventDefault();\n\n    photosList.innerHTML = \"\";\n    if (input.value === \"\") {\n        return\n    }\n  pixabay.fetchPhoto(pixabay.searchParams)\n      .then((photos) => {if (photos.hits.length === 0) {\n          iziToast.error({\n            message: 'Sorry, there are no images matching your search query. Please try again!',\n            position: 'topRight',\n            });\n      }\n      else {\n          render.rendrePhoto(photos, photosList)\n          const lightbox = new SimpleLightbox('.gallery a', { captionsData: 'alt', captionDelay: '250' });\n          lightbox.refresh()\n          input.value = ''\n          }}\n    )\n      .catch((error) => { iziToast.error({\n            message: `${error}`,\n            position: 'topRight',\n            }); })\n}\n"],"names":["searchParams","fetchPhoto","params","spinner","response","rendrePhoto","photos","list","markup","photo","input","photosList","form","inputValueFunc","event","pixabay.searchParams","formSubmit","pixabay.fetchPhoto","iziToast","render.rendrePhoto","SimpleLightbox","error"],"mappings":"6vBAAO,MAAMA,EAAiB,CAC1B,IAAK,qCACL,EAAG,GACH,WAAY,QACZ,YAAa,aACb,WAAY,OACZ,OAAQ,MACZ,EAEO,SAASC,EAAWC,EAAQ,CACjC,MAAMC,EAAU,SAAS,cAAc,SAAS,EAEhD,GADAA,EAAQ,MAAM,QAAU,QACpBD,EAAO,IAAM,GAAI,CACfC,EAAQ,MAAM,QAAU,OACxB,MACH,CACH,OAAO,MACL,4BAA4B,IAAI,gBAAgBD,CAAM,CAAC,EAC3D,EAAI,KAAME,GAAa,CAEnB,GADAD,EAAQ,MAAM,QAAU,OACpB,CAACC,EAAS,GACZ,MAAM,IAAI,MAAMA,EAAS,MAAM,EAEjC,OAAOA,EAAS,MACpB,CAAG,CACH,CCzBO,SAASC,EAAYC,EAAQC,EAAM,CACtC,MAAMC,EAASF,EAAO,KACrB,IAAKG,GACG;AAAA,2DAC8CA,EAAM,aAAa;AAAA;AAAA;AAAA,uCAGvCA,EAAM,YAAY;AAAA,uCAClBA,EAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEAOwBA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,yEAIXA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,yEAIXA,EAAM,QAAQ;AAAA;AAAA;AAAA;AAAA,yEAIdA,EAAM,SAAS;AAAA;AAAA;AAAA;AAAA,8BAKnF,EACA,KAAK,EAAE,EACRF,EAAK,mBAAmB,YAAaC,CAAM,CAC/C,CC1BA,MAAME,EAAQ,SAAS,cAAc,sBAAsB,EACrDC,EAAa,SAAS,cAAc,UAAU,EAC9CC,EAAO,SAAS,cAAc,OAAO,EAE3CF,EAAM,iBAAiB,QAASG,CAAc,EAE9C,SAASA,EAAeC,EAAO,CAC3BC,EAAqB,EAAID,EAAM,OAAO,KAC1C,CAEAF,EAAK,iBAAiB,SAAUI,CAAU,EAE1C,SAASA,EAAWF,EAAO,CACvBA,EAAM,eAAc,EAEpBH,EAAW,UAAY,GACnBD,EAAM,QAAU,IAGtBO,EAAmBF,CAAoB,EAClC,KAAMT,GAAW,CAAKA,EAAO,KAAK,SAAW,EAC1CY,EAAS,MAAM,CACb,QAAS,2EACT,SAAU,UACtB,CAAa,GAGHC,EAAmBb,EAAQK,CAAU,EACpB,IAAIS,EAAe,aAAc,CAAE,aAAc,MAAO,aAAc,KAAK,CAAE,EACrF,QAAS,EAClBV,EAAM,MAAQ,GACb,CACN,EACE,MAAOW,GAAU,CAAEH,EAAS,MAAM,CAC7B,QAAS,GAAGG,CAAK,GACjB,SAAU,UACT,CAAA,CAAE,CAAE,CACjB"}